# # name: Code Coverage

# # on:
# #     push:
# #         branches: ["main"]

# # permissions:
# #     contents: read

# # jobs:
# #     build:
# #         runs-on: ubuntu-latest

# #         steps:
# #             - uses: actions/checkout@v3
# #             - name: Set up Python 3.9
# #               uses: actions/setup-python@v3
# #               with:
# #                   python-version: "3.9"
# #             - name: Install dependencies
# #               run: |
# #                   python -m pip install --upgrade pip
# #                   pip install coverage
# #                   pip install pytest
# #                   if [ -f backend/test/requirements.txt ]; then pip install -r backend/test/requirements.txt; fi
# #             - name: Add folders to Python Path
# #               run: |
# #                   echo "PYTHONPATH=tests:code:data" >> $GITHUB_ENV
# #             - name: Generate Coverage
# #               run: |
# #                   export CI=GITHUB_ACTIONS
# #                   coverage run -m backend.test.Test
# #                   coverage xml
# #             - name: Upload to CodeCov
# #               run: |
# #                   curl -Os https://uploader.codecov.io/latest/linux/codecov
# #                   chmod +x codecov
# #                   ./codecov


# # .github/workflows/coverage.yml
# name: Code Coverage

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# permissions:
#   contents: read

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
    
#     - name: Set up Python 3.9
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.9"
    
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install coverage pytest flask firebase-admin flask-cors
#         if [ -f backend/test/requirements.txt ]; then pip install -r backend/test/requirements.txt; fi
    
#     - name: Add folders to Python Path
#       run: |
#         echo "PYTHONPATH=$PYTHONPATH:${{ github.workspace }}" >> $GITHUB_ENV
    
#     - name: Run Tests with Coverage
#       run: |
#         python backend/test/Test.py
    
#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         files: ./coverage.xml
#         flags: unittests
#         name: codecov-umbrella
#         fail_ci_if_error: true
#         verbose: true

name: Code Coverage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage flask firebase-admin flask-cors
        if [ -f backend/test/requirements.txt ]; then pip install -r backend/test/requirements.txt; fi
    
    - name: Add folders to Python Path
      run: |
        echo "PYTHONPATH=$PYTHONPATH:${{ github.workspace }}" >> $GITHUB_ENV
    
    - name: Run Tests with Coverage
      run: |
        python backend/test/Test.py
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: |
          coverage.xml
          htmlcov